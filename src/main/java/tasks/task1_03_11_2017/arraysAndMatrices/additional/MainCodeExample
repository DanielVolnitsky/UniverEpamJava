package tasks;

import tasks.helpers.ArrayHelper;
import tasks.helpers.MatrixHelper;
import tasks.task1_03_11_2017.arraysAndMatrices.entities.MatrixBypasser;
import tasks.task1_03_11_2017.arraysAndMatrices.entities.Sorter;

import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        int[] arr = new int[10];

        ArrayHelper.fillArrayByRandomizedInt(arr, -50, 50);
        System.out.println("Initial array:\n" + Arrays.toString(arr));

        //Task1
        Sorter.sortNegativesAscendingPositiveDescending(arr);
        System.out.println("Result of task 1 sorting:\n" + Arrays.toString(arr));

        ArrayHelper.fillArrayByRandomizedInt(arr, -50, 50);
        System.out.println("\nInitial array:\n" + Arrays.toString(arr));

        //Task2
        Sorter.sortPositiveThenNegative(arr);
        System.out.println("Result of task 2 sorting:\n" + Arrays.toString(arr));

        int[][] matrix = new int[3][8];

        //Task3
        MatrixHelper.fillMatrixByRandomizedInt(matrix, -50, 50);
        System.out.println("\nInitial matrix:");
        MatrixHelper.printMatrix(matrix);

        Sorter.sortColumnsByAverageValueDescending(matrix);
        System.out.println("\nResult of task 3 sorting:");
        MatrixHelper.printMatrix(matrix);

        //Task4
        MatrixHelper.fillMatrixByRandomizedInt(matrix, 0, 10);
        System.out.println("\nInitial matrix:");
        MatrixHelper.printMatrix(matrix);

        Sorter.sortRowsByLongestSeries(matrix);
        System.out.println("\nResult of task 4 sorting:");
        MatrixHelper.printMatrix(matrix);

        int m = 5;
        int[][] matrix2 = new int[m][m];
        MatrixHelper.fillMatrixByRandomizedInt(matrix2, 0, 50);

        //Task5
        System.out.println("\nInitial matrix:");
        MatrixHelper.printMatrix(matrix2);
        try {
            MatrixBypasser mb = new MatrixBypasser(matrix2);
            System.out.println("\nResult of bypassMatrixClockwise bypassing:\n"
                    + Arrays.toString(mb.bypassMatrixClockwise()));
        } catch (IllegalArgumentException e) {
            System.out.println(e.getMessage());
        }
    }
}
